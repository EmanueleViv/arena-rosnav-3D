<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Arguments -->
  <arg name="model" default="turtlebot3_burger" doc="model type [turtlebot3_burger, waffle, waffle_pi]"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />


  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find conventional)/config/$(arg model)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find conventional)/config/$(arg model)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find conventional)/config/$(arg model)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find conventional)/config/$(arg model)/global_costmap_params.yaml" command="load" />

    <!-- planner params -->
    <rosparam file="$(find conventional)/config/$(arg model)/base_local_planner_params.yaml" command="load" />
   

    <remap from="cmd_vel" to="/foo"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <param name="controller_frequency" value="0.0" /> <!-- Diese 3 einziger unterschied zu tb3-->
    <param name="controller_patience" value="15.0" /> 
    <param name="planner_frequency" value="0.0" /> <!-- default is 0.0 (plan only when needed)-->

  </node>

  <node pkg="barn_challenge" type="gap_navigation" name="gap_navigation" output="screen">
    <param name="goal_x" value="10" />
    <param name="goal_y" value="10" />
    <param name="left" value="-100" />
    <param name="top" value="-100" />
    <param name="bwidth" value="200" />
    <param name="bheight" value="200" />
    <param name="gapThresh" value=".65" />
    <param name="dist" value="10" />
    <remap from="/scan" to="/truncate/scan" />
  </node>

  <node pkg="barn_challenge" type="reduce_lidar" name="reduce_lidar" output="screen">
    <param name="cap" value="10" />
  </node>

  <node pkg="barn_challenge" type="cone_bench.py" name="cone_bench" output="screen" />

</launch>